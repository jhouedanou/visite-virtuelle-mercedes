<!--
	krpano - contextmenu example
	- customize the context menu
	- settings with sub-menu items for changing the control modes
	- settings for changing the viewing projection
	- a logo image (html code)
	- custom css-styles
-->
<krpano>

	<preview url="preview.jpg" />
	<image>
		<cube url="mobile_%s.jpg" />
	</image>
	

	<contextmenu fullscreen="true" versioninfo="true">
		<item name="kr" caption="KRPANO"     />
		<item name="fs" caption="FULLSCREEN" />
		<item name="cm" separator="above" caption="link:control.mode:'Control Mode: ' +
			'[a href=[sq]krpano:set(control.mode,drag);[sq]   style=[sq]color:inherit;text-decoration:' + (control.mode == 'drag'   ? 'underline' : 'none') + ';[sq]]Drag[/a] | ' +
			'[a href=[sq]krpano:set(control.mode,follow);[sq] style=[sq]color:inherit;text-decoration:' + (control.mode == 'follow' ? 'underline' : 'none') + ';[sq]]Follow[/a] | ' +
			'[a href=[sq]krpano:set(control.mode,moveto);[sq] style=[sq]color:inherit;text-decoration:' + (control.mode == 'moveto' ? 'underline' : 'none') + ';[sq]]MoveTo[/a]'"
			/>
		<item name="nv" caption="Normal View"        onclick="cm_normal_view();"        showif="view.vlookatrange == 180" separator="above" />
		<item name="fv" caption="Fisheye View"       onclick="cm_fisheye_view();"       showif="view.vlookatrange == 180" devices="webgl"   />
		<item name="sv" caption="Stereographic View" onclick="cm_stereographic_view();" showif="view.vlookatrange == 180" devices="webgl"   />
		<item name="av" caption="Architectural View" onclick="cm_architectural_view();" showif="view.vlookatrange == 180"                   />
		<item name="pv" caption="Pannini View"       onclick="cm_pannini_view();"       showif="view.vlookatrange == 180" devices="webgl"   />
		<item name="lp" caption="Little Planet View" onclick="cm_littleplanet_view();"  showif="view.vlookatrange == 180" devices="webgl"   />
		<item name="logo" caption="calc:'[img src=[sq]'+network.currentxmlpath+'/krpano_logo.png[sq] style=[sq]width:90px; height:25px; margin:0px 0px -6px -2px;[sq] /]'" separator="above" onclick="openurl('http://krpano.com')" />
	</contextmenu>
	
	
	<action name="cm_look_straight">
		if(view.vlookat LT -80 OR view.vlookat GT +80,
			tween(view.vlookat, 0.0, 1.0, easeinoutsine);
			tween(view.fov,     100, distance(150,0.8));
		  );
	</action>

	<action name="cm_normal_view">
		cm_look_straight();
		tween(view.architectural, 0.0, distance(1.0,0.5));
		tween(view.pannini,       0.0, distance(1.0,0.5));
		tween(view.fisheye,       0.0, distance(1.0,0.5));
	</action>

	<action name="cm_architectural_view">
		cm_look_straight();
		tween(view.architectural, 1.0, distance(1.0,0.5));
		tween(view.pannini,       0.0, distance(1.0,0.5));
		tween(view.fisheye,       0.0, distance(1.0,0.5));
	</action>

	<action name="cm_fisheye_view">
		cm_look_straight();
		tween(view.architectural, 0.0,  distance(1.0,0.5));
		tween(view.pannini,       0.0,  distance(1.0,0.5));
		tween(view.fisheye,       0.35, distance(1.0,0.5));
	</action>

	<action name="cm_stereographic_view">
		cm_look_straight();
		tween(view.architectural, 0.0, distance(1.0,0.5));
		tween(view.pannini,       0.0, distance(1.0,0.5));
		tween(view.fisheye,       1.0, distance(1.0,0.8));
	</action>

	<action name="cm_pannini_view">
		cm_look_straight();
		tween(view.architectural, 0.0, distance(1.0,0.5));
		tween(view.pannini,       1.0, distance(1.0,0.8));
		if(view.fisheye LT 0.1, tween(view.fisheye, 1.0, distance(1.0,0.8)); );
	</action>

	<action name="cm_littleplanet_view">
		tween(view.architectural, 0.0, distance(1.0,0.5));
		tween(view.pannini,       0.0, distance(1.0,0.5));
		tween(view.fisheye,       1.0, distance(1.0,0.8));
		tween(view.fov,           150, distance(150,0.8));
		tween(view.vlookat,        90, distance(100,0.8));
		tween(view.hlookat, (view.hlookat + 100.0 + 45.0*random), distance(100,0.8));
	</action>

	
	<cssstyles>
		.osxdark_contextmenu{ font-family:system-ui, sans-serif; font-size:13.0px; color:white; padding:4px; background:rgba(52,47,50,0.616); border:1px solid rgba(170,170,170,0.4); border-radius:6px; box-shadow:-0.5px 0px 0px black, +0.5px 0px 0px black, 0px -0.5px 0px black, 0px +0.5px 0px black, 2px 2px 8px rgba(0,0,0,0.333); -webkit-backdrop-filter:blur(16px); backdrop-filter:blur(16px); }
		.osxdark_item{ padding:4px 6px; border-radius:6px; }
		.osxdark_item:not([disabled]):hover:not(:has(a)), .osxdark_item a:hover{ background:rgba(0,0,0,0.2); }
		.osxdark_item[disabled]{ color:rgba(170,170,170,0.6); }
		.osxdark_item a{ padding:5px; border-radius:5px; }
		.osxdark_seperator{ margin:6px; height:1px; background:rgba(170,170,170,0.4); }
		
		.win11_contextmenu{ font-family:'Segoe UI', system-ui, sans-serif; font-size:13.0px; color:rgb(0,0,0); padding:4px; background:rgba(252,252,252,0.85); border-radius:9px; box-shadow:0px 4px 12px rgba(0,0,0,0.5); -webkit-backdrop-filter:blur(20px); backdrop-filter:blur(20px); }
		.win11_item{ margin:2px; padding:4px 8px; border-radius:5px; }
		.win11_item:not([disabled]):hover:not(:has(a)), .win11_item a:hover{ background:rgba(100,100,100,0.1); }
		.win11_item[disabled]{ color:rgb(150,150,150); }
		.win11_item a{ border-radius:5px; padding:4px; }
		.win11_seperator{ margin:6px; height:1px; background:rgba(200,200,200,0.5); }
		
		.win10_contextmenu{ font-family:'Segoe UI', system-ui, sans-serif; font-size:12.0px; color:rgb(0,0,0); padding:5px; background:rgb(238,238,238); border:1px solid rgb(145,145,145); box-shadow:2px 2px 4px rgba(0,0,0,0.5); }
		.win10_item{ padding:4px 6px; padding-left:26px; padding-right:10px; }
		.win10_item:not([disabled]):hover:not(:has(a)), .win10_item a:hover{ background:rgb(255,255,255); }
		.win10_item[disabled]{ color:rgb(150,150,150); }
		.win10_item a{ padding:4px; }
		.win10_seperator{ margin:6px; height:1px; background:rgba(145,145,145); margin-left:26px; }
		
		.win7_contextmenu{ font-family:'Segoe UI', system-ui, sans-serif; font-size:12.0px; color:rgb(0,0,0); background:rgb(240,240,240); border:2px solid rgb(245,245,245); outline:1px solid rgb(151,151,151); box-shadow:2px 2px 4px rgba(0,0,0,0.5); }
		.win7_item{ margin:2px; padding:2px 10px 2px 26px; border:1px solid rgba(0,0,0,0); border-radius:2px; }
		.win7_item:not([disabled]):hover:not(:has(a)), .win7_item a:hover{ background:rgb(232,238,246); background-image: linear-gradient(to bottom, rgb(242,244,246) 0%, rgb(229,237,245) 100%); border:1px solid rgb(247,247,249); outline:1px solid rgb(174,207,247); }
		.win7_item[disabled]{ color:rgb(150,150,150); }
		.win7_item a{ padding:2px; border:1px solid rgba(0,0,0,0); border-radius:2px; }
		.win7_seperator{ xmargin:6px; border-top:1px solid rgb(224,224,224); border-bottom:1px solid rgb(255,255,255); }
		
		.neo_contextmenu{ font-family:monospace; font-size:11.0px; padding:2px 0; color:white; text-shadow:1px 1px 0px rgb(0,0,0); background:rgba(65,65,65,0.8); border:1px solid rgb(57,255,20); box-shadow:2px 2px 8px rgba(0,0,0,0.6), 0px 0px 40px rgba(57,255,20,0.3); -webkit-backdrop-filter:blur(9px); backdrop-filter:blur(9px); }
		.neo_item{ margin:4px 0; padding:7px 14px; transition:background-color 0.3s ease-out; }
		.neo_item:not([disabled]):hover:not(:has(a)), .neo_item a:hover{ background-color:rgb(57,255,20,1); color:black!important; text-shadow:+1px +1px 0px white; }
		.neo_item[disabled]{ color:rgb(150,150,150); }
		.neo_item a{ padding:7px; transition:background-color 0.3s ease-out; }
		.neo_seperator{ height:1px; background-color:rgba(57,255,20,0.2); xbackground-color:rgba(60,60 60,0.5); }
		
		.flat_contextmenu{ font-family:system-ui, sans-serif; font-size:12.0px; color:black; background:white; }
		.flat_item{ padding:8px 16px; }
		.flat_item:not([disabled]):hover:not(:has(a)), .flat_item a:hover{ color:white!important; background:rgb(63,132,250); }
		.flat_item[disabled]{ color:gray; }
		.flat_item a{ padding:8px; }
		.flat_seperator{ height:1px; background:rgb(240,240,240); }
	</cssstyles>

	<!-- testing different looks -->
	
	<layer type="text" bg="false" css="color:#FFFFFF;font-weight:bold;font-size:16px;" txtshadow="0 1 2 0x0000000 1.0" enabled="false" align="top" y="20%" text.mouse="Right-click to open the contextmenu" text.no-mouse="Long-press to open the contextmenu" />
	
	<style name="item" type="text" css="font-family:monospace;" bgroundedge="3" onover="bgcolor=0xEEEEEE;" onout="bgcolor=0xFFFFFF;" ondown.touch="onover()" onup.touch="onout()" />
	
	<layer type="container" align="leftbottom" flowchildren="v" flowchildrenexpand="true" childmargin="4" bgcolor="0xFFFFFF" bgalpha="1" bgroundedge="3" x="7" y="7">
		<layer style="item" text="Customize the Contextmenu Items:" enabled="false" />
		<layer style="item" template="{{contextmenu.item[kr].visible:contextmenu.item[kr].visible ? '[[x]]' : '[[ ]]'}} About krpano" onclick="switch(contextmenu.item[kr].visible);" />
		<layer style="item" template="{{contextmenu.item[fs].visible:contextmenu.item[fs].visible ? '[[x]]' : '[[ ]]'}} Fullscreen" onclick="switch(contextmenu.item[fs].visible); switch(contextmenu.fullscreen);" />
		<layer style="item" template="{{contextmenu.item[cm].visible:contextmenu.item[cm].visible ? '[[x]]' : '[[ ]]'}} Control Modes" onclick="switch(contextmenu.item[cm].visible);" />
		<layer style="item" template="{{contextmenu.item[nv].visible:contextmenu.item[nv].visible ? '[[x]]' : '[[ ]]'}} Projections" onclick="switch(contextmenu.item[nv].visible); switch(contextmenu.item[fv].visible); switch(contextmenu.item[sv].visible); switch(contextmenu.item[av].visible); switch(contextmenu.item[pv].visible); switch(contextmenu.item[lp].visible);" />
		<layer style="item" template="{{contextmenu.item[logo].visible:contextmenu.item[logo].visible ? '[[x]]' : '[[ ]]'}} Logo Image" onclick="switch(contextmenu.item[logo].visible);" />
		<layer style="item" template="{{contextmenu.versioninfo:contextmenu.versioninfo ? '[[x]]' : '[[ ]]'}} Version Infos" onclick="switch(contextmenu.versioninfo);" />
		<layer style="item" template="{{debugmode:debugmode ? '[[x]]' : '[[ ]]'}} Debugmode" onclick="switch(debugmode);" />
		<layer style="item" text="[br]Select a Custom Design:" enabled="false" />
		<layer style="item" template="{{contextmenu.customcssclasses:!isvalue(contextmenu.customcssclasses) ? '[[x]]' : '[[ ]]'}} Default" onclick="contextmenu.customcssclasses=''" />
		<layer style="item" template="{{contextmenu.customcssclasses:startswith(contextmenu.customcssclasses,'osxdark') ? '[[x]]' : '[[ ]]'}} OSX Dark" onclick="contextmenu.customcssclasses='osxdark_contextmenu|osxdark_item|osxdark_seperator'" />
		<layer style="item" template="{{contextmenu.customcssclasses:startswith(contextmenu.customcssclasses,'win11') ? '[[x]]' : '[[ ]]'}} Win11" onclick="contextmenu.customcssclasses='win11_contextmenu|win11_item|win11_seperator'" />
		<layer style="item" template="{{contextmenu.customcssclasses:startswith(contextmenu.customcssclasses,'win10') ? '[[x]]' : '[[ ]]'}} Win10" onclick="contextmenu.customcssclasses='win10_contextmenu|win10_item|win10_seperator'" />
		<layer style="item" template="{{contextmenu.customcssclasses:startswith(contextmenu.customcssclasses,'win7') ? '[[x]]' : '[[ ]]'}} Win7" onclick="contextmenu.customcssclasses='win7_contextmenu|win7_item|win7_seperator'" />
		<layer style="item" template="{{contextmenu.customcssclasses:startswith(contextmenu.customcssclasses,'neo') ? '[[x]]' : '[[ ]]'}} Neo" onclick="contextmenu.customcssclasses='neo_contextmenu|neo_item|neo_seperator'" />
		<layer style="item" template="{{contextmenu.customcssclasses:startswith(contextmenu.customcssclasses,'flat') ? '[[x]]' : '[[ ]]'}} Flat" onclick="contextmenu.customcssclasses='flat_contextmenu|flat_item|flat_seperator'" />
	</layer>

</krpano>